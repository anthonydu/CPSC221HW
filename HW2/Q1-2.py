import math


def S(n):
    if n == 1:
        return 6
    else:
        return 10 * S(n - 1) + 6 * n


def ans(n):
    # n = 2, 60 + 6 * 2
    # n = 3, 600 + 6 * 3 + 60 * 2
    # n = 4, 6000 + 6 * 4 + 60 * 3 + 600 * 2

    #   6 * 10^(n-1) + 10^0 * 6(n-0) + 10^1 * 6(n-1) + 10^2 * 6(n-2) + ...
    # = 6 * 10^(n-1) + 6 * (10^0 * (n-0) + 10^1 * (n-1) + 10^2 * (n-2) + ...)
    # = 6 * 10^(n-1) + 6 * (10^0 * n - 10^0 * 0 + 10^1 * n - 10^1 * 1 + 10^2 * n - 10^2 * 2 + ...)
    # = 6 * 10^(n-1) + 6 * (10^0 * n + 10^1 * n + 10^2 * n + ...) - 6 * (10^0 * 0 + 10^1 * 1 + - 10^2 * 2 + ...)
    # = 6 * 10^(n-1) + 6n * (10^0 + 10^1 + 10^2 + ...) - 6 * (10^0 * 0 + 10^1 * 1 + - 10^2 * 2 + ...)
    # = 6 * 10^(n-1) + 6n * 1...1 - (n - 2)...543210
    # = 6 * 10^(n-1) + 6n * (10^(n-1)-1)/9 - 6 * (n - 2)...6543210

    #   S(n) = (n - 2)...6543210
    #   S(n) = 10 + 200 + 3000 + 40000 + ... + (n-2) * 10^(n-2)
    # 10S(n) =      100 + 2000 + 30000 + ... + (n-3) * 10^(n-2) + (n-2) * 10^(n-1)
    # -9S(n) = 10 + 100 + 1000 + 10000 + ... +    1  * 10^(n-2) - (n-2) * 10^(n-1)
    # -9S(n) = ((10^(n-1)-1)/9 - 1)                             - (n-2) * 10^(n-1)
    #   S(n) = ((n-2) * 10^(n-1) - ((10^(n-1)-1)/9 - 1)) / 9

    return (
        6 * 10 ** (n - 1)
        + 6 * n * (10 ** (n - 1) - 1) / 9
        - ((n - 2) * 10 ** (n - 1) - ((10 ** (n - 1) - 1) / 9 - 1)) / 9 * 6
    )


for i in range(1, 10):
    print(math.isclose(S(i), ans(i)))
